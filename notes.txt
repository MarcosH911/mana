---------- GENERAL ----------
VARIABLE -> Variable to replace


---------- HTML ----------
2 Types:
  <TAG_NAME> CHILDREN </TAG_NAME>
  <TAG_NAME/>

Tags:
  <div></div> -> Container
  <span></span> -> Text
  <button></button> -> Button
  <img/> -> Image

Attributes:
  <div ATTRIBUTE_NAME=ATTRIBUTE_VALUE></div>
  <div className="CLASS"></div>
  <div id="ID"></div>
  <img src="IMAGE_PATH"></div>
  <input placeholder="TEXT" />
  <input type="TYPE" />
  <label htmlFor="ID"></label>

Tailwind CSS:
  <div className="CLASS_1 CLASS_2"></div>

  Tailwind CSS classes:
    bg-COLOR-INTENSITY -> Background color
    text-COLOR-INTENSITY -> Text color

    flex -> Makes the container flexible and places children in a row
      justify-center -> Horizontally align children to center
      item-center -> Vertically align children to center
      flex-col -> Places children in a column
      gap-SPACE -> Adds a gap between its children

    h-HEIGHT
    w-WIDTH

    p-PADDING -> Padding
    m-MARGIN -> Margin

    border-THICKNESS -> Border around the element
    border-COLOR-INTENSITY -> Color of the border

    rounded-MEASURE -> How rounded is the element
    shadow-MEASURE -> Shadow

    text-MEASURE -> Size of the text
    font-WEIGHT -> How bold is the font

    fixed -> Fixed position in the page
    absolute -> Position relative to the nearest parent with a position set
    relative -> Position relative the position where the element would be placed

    left-NUMBER -> Where the left of the container is placed
    right-NUMBER -> Where the right of the container is placed
    top-NUMBER -> Where the top of the container is placed
    bottom-NUMBER -> Where the bottom of the container is placed

    translate-x-NUMBER -> Translate the element in the x axis
    translate-y-NUMBER -> Translate the element in the x axis

    z-NUMBER -> Z position in the page
  
    STATE:CLASS
      dark -> Applies when the theme is set to dark
      hover -> Applies when the element is hovered
      active -> Applies when the element is active
      focus -> Applies when the element is focused

    transition -> Transition when entering or leaving a state
    duration-NUMBER -> The duration of the transition
    

  Tailwind CSS units:
    NUMBER/NUMBER -> A fraction of its parent size
    full -> 100% of its parent size
    screen -> Size of the screen

JavaScript
  function NAME(ARG1, ARG2) {FUNCTION}

Next.js
  <Image />
  <Link></Link>


Ctrl + Shift + I  ->  Ctrl + Shift + P  ->  Show Rendering  ->  prefers-color-scheme

onClick={FUNCTION}
const [value, setValue] = useState(initialValue)

value -> Read the value
setValue -> Change the value

setValue(VALUE) -> When new VALUE doesn't depend on old value
setValue(FUNCTION(value) {}) -> When new VALUE depends on old value
setValue((value) => newValue)